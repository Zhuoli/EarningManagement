/**
 * This class is generated by jOOQ
 */
package JooqMap.tables;


import JooqMap.Keys;
import JooqMap.Library;
import JooqMap.tables.records.SharedstockitemsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sharedstockitems extends TableImpl<SharedstockitemsRecord> {

    /**
     * The reference instance of <code>library.SharedStockItems</code>
     */
    public static final Sharedstockitems SHAREDSTOCKITEMS = new Sharedstockitems();
    private static final long serialVersionUID = 115431031;
    /**
     * The column <code>library.SharedStockItems.Symbol</code>.
     */
    public final TableField<SharedstockitemsRecord, String> SYMBOL = createField("Symbol", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");
    /**
     * The column <code>library.SharedStockItems.Shares</code>.
     */
    public final TableField<SharedstockitemsRecord, Integer> SHARES = createField("Shares", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>library.SharedStockItems.Reportdate</code>.
     */
    public final TableField<SharedstockitemsRecord, Date> REPORTDATE = createField("Reportdate", org.jooq.impl.SQLDataType.DATE, this, "");
    /**
     * The column <code>library.SharedStockItems.SharedAverageCost</code>.
     */
    public final TableField<SharedstockitemsRecord, Double> SHAREDAVERAGECOST = createField("SharedAverageCost", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");
    /**
     * The column <code>library.SharedStockItems.TargetPrice</code>. One year target price
     */
    public final TableField<SharedstockitemsRecord, Double> TARGETPRICE = createField("TargetPrice", org.jooq.impl.SQLDataType.DOUBLE, this, "One year target price");

    /**
     * Create a <code>library.SharedStockItems</code> table reference
     */
    public Sharedstockitems() {
        this("SharedStockItems", null);
    }

    /**
     * Create an aliased <code>library.SharedStockItems</code> table reference
     */
    public Sharedstockitems(String alias) {
        this(alias, SHAREDSTOCKITEMS);
    }

    private Sharedstockitems(String alias, Table<SharedstockitemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sharedstockitems(String alias, Table<SharedstockitemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SharedstockitemsRecord> getRecordType() {
        return SharedstockitemsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Library.LIBRARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SharedstockitemsRecord> getPrimaryKey() {
        return Keys.KEY_SHAREDSTOCKITEMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SharedstockitemsRecord>> getKeys() {
        return Arrays.<UniqueKey<SharedstockitemsRecord>>asList(Keys.KEY_SHAREDSTOCKITEMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Sharedstockitems as(String alias) {
        return new Sharedstockitems(alias, this);
    }

    /**
     * Rename this table
     */
    public Sharedstockitems rename(String name) {
        return new Sharedstockitems(name, null);
    }
}
