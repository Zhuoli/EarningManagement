/**
 * This class is generated by jOOQ
 */
package JooqORM.tables;


import JooqORM.Earningmanagerdb;
import JooqORM.Keys;
import JooqORM.tables.records.HeartbeatRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Heartbeat extends TableImpl<HeartbeatRecord> {

    private static final long serialVersionUID = 896544071;

    /**
     * The reference instance of <code>EarningManagerDB.heartbeat</code>
     */
    public static final Heartbeat HEARTBEAT = new Heartbeat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HeartbeatRecord> getRecordType() {
        return HeartbeatRecord.class;
    }

    /**
     * The column <code>EarningManagerDB.heartbeat.name</code>.
     */
    public final TableField<HeartbeatRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>EarningManagerDB.heartbeat.heartbeat</code>.
     */
    public final TableField<HeartbeatRecord, Timestamp> HEARTBEAT_ = createField("heartbeat", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>EarningManagerDB.heartbeat</code> table reference
     */
    public Heartbeat() {
        this("heartbeat", null);
    }

    /**
     * Create an aliased <code>EarningManagerDB.heartbeat</code> table reference
     */
    public Heartbeat(String alias) {
        this(alias, HEARTBEAT);
    }

    private Heartbeat(String alias, Table<HeartbeatRecord> aliased) {
        this(alias, aliased, null);
    }

    private Heartbeat(String alias, Table<HeartbeatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Earningmanagerdb.EARNINGMANAGERDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HeartbeatRecord> getPrimaryKey() {
        return Keys.KEY_HEARTBEAT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HeartbeatRecord>> getKeys() {
        return Arrays.<UniqueKey<HeartbeatRecord>>asList(Keys.KEY_HEARTBEAT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Heartbeat as(String alias) {
        return new Heartbeat(alias, this);
    }

    /**
     * Rename this table
     */
    public Heartbeat rename(String name) {
        return new Heartbeat(name, null);
    }
}
